<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://lee-jua.github.io/</id><title>전두엽을 깨우는 블로그</title><subtitle>developer, programming, IT</subtitle> <updated>2023-01-23T22:25:00+09:00</updated> <author> <name>이주아</name> <uri>https://lee-jua.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://lee-jua.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://lee-jua.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 이주아 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Do it! 자료구조와 함께 배우는 알고리즘 입문 자바 편 리뷰</title><link href="https://lee-jua.github.io/posts/Do-it!-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%99%80-%ED%95%A8%EA%BB%98-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9E%85%EB%AC%B8-%EC%9E%90%EB%B0%94-%ED%8E%B8-%EB%A6%AC%EB%B7%B0/" rel="alternate" type="text/html" title="Do it! 자료구조와 함께 배우는 알고리즘 입문 자바 편 리뷰" /><published>2023-01-23T22:23:00+09:00</published> <updated>2023-01-23T22:23:00+09:00</updated> <id>https://lee-jua.github.io/posts/Do-it!-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%99%80-%ED%95%A8%EA%BB%98-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9E%85%EB%AC%B8-%EC%9E%90%EB%B0%94-%ED%8E%B8-%EB%A6%AC%EB%B7%B0/</id> <content src="https://lee-jua.github.io/posts/Do-it!-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EC%99%80-%ED%95%A8%EA%BB%98-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9E%85%EB%AC%B8-%EC%9E%90%EB%B0%94-%ED%8E%B8-%EB%A6%AC%EB%B7%B0/" /> <author> <name>이주아</name> </author> <category term="프로그래밍 이론" /> <category term="IT서적 리뷰" /> <summary> 비전공자로서 기초도 바탕도 없지만 일단 부딪혀보자는 생각으로 백준 알고리즘을 하나씩 풀어보고 있었습니다. 그러나 얼마 안가 한계가 왔습니다. 더 이상 혼자 진도를 나가기가 힘겨워져 아무래도 알고리즘을 ‘공부’해봐야겠다는 생각에 이 책을 구매했습니다. 그리고 약 3개월이 넘어서야 겨우 1회독을 했습니다. 알고리즘 책에서 정의한 알고리즘은 다음과 같습니다. 어떤 문제를 해결하기 위한 절차로, 명확하게 정의되고 순서가 있는 유한 개의 규칙으로 이루어진 집합 프로그래밍 상황에서 어떤 문제가 주어졌을 때, 저희는 이를 해결하기 위한 절차를 세워야 합니다. 알고리즘을 공부한 사람이라면 그 절차를 더욱 간결하게, 빠르게, 그리고 아름답게 다듬을 줄 알아야 할 것입니다. 책에서는 평범한 알고리즘을 ... </summary> </entry> <entry><title>Spring boot를 사용한 RESTful Web Service 만들기</title><link href="https://lee-jua.github.io/posts/Spring-boot%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-RESTful-Web-Service-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="Spring boot를 사용한 RESTful Web Service 만들기" /><published>2022-12-22T22:03:00+09:00</published> <updated>2022-12-22T22:03:00+09:00</updated> <id>https://lee-jua.github.io/posts/Spring-boot%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-RESTful-Web-Service-%EB%A7%8C%EB%93%A4%EA%B8%B0/</id> <content src="https://lee-jua.github.io/posts/Spring-boot%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-RESTful-Web-Service-%EB%A7%8C%EB%93%A4%EA%B8%B0/" /> <author> <name>이주아</name> </author> <category term="개발 실습" /> <summary> ‘동적인 웹 페이지를 만들기 위한 JAVA 웹 프로그래밍 기술‘이라는 포스팅에서 자바 웹 프로그래밍과 스프링에 대해서 정리한 적이 있습니다. 그 다음 이어지는 내용으로 스프링 부트로 만드는 RESTful Web Service에 대해서 정리하려고 합니다. 인프런의 다음의 강의를 수강했습니다. 2년정도 전에 학원에 다닐때 배웠던 내용이 대부분인데 오랜만에 다시 배우려니까 꽤 어렵더라고요. 총 6시간 43분의 짧은 강의지만 체감으로는 꽤나 길었습니다. 이번 포스팅에서는 RESTful Web Service를 구성하는 RESTful API에 대해서 알아보고, 이후로는 스프링부트로 이를 구현해보려고 합니다. RESTful API란 RESTful API에 대해서 설명하기 전에 API란 무엇인지에 대해서... </summary> </entry> <entry><title>맥북m1 터미널 iterm2로 커스텀하기</title><link href="https://lee-jua.github.io/posts/%EB%A7%A5%EB%B6%81m1-%ED%84%B0%EB%AF%B8%EB%84%90-iterm2%EB%A1%9C-%EC%BB%A4%EC%8A%A4%ED%85%80%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="맥북m1 터미널 iterm2로 커스텀하기" /><published>2022-11-04T23:05:00+09:00</published> <updated>2022-12-04T14:34:30+09:00</updated> <id>https://lee-jua.github.io/posts/%EB%A7%A5%EB%B6%81m1-%ED%84%B0%EB%AF%B8%EB%84%90-iterm2%EB%A1%9C-%EC%BB%A4%EC%8A%A4%ED%85%80%ED%95%98%EA%B8%B0/</id> <content src="https://lee-jua.github.io/posts/%EB%A7%A5%EB%B6%81m1-%ED%84%B0%EB%AF%B8%EB%84%90-iterm2%EB%A1%9C-%EC%BB%A4%EC%8A%A4%ED%85%80%ED%95%98%EA%B8%B0/" /> <author> <name>이주아</name> </author> <category term="개발 실습" /> <summary> 리눅스(또는 맥북) 터미널을 익숙하게 쓰면서도 동시에 꽤나 불편하게 써왔다는 것을 깨달았습니다. 격투게임에서 필살기를 쓰면 한번에 많은양의 피를 깎을 수 있으면서도, 복잡한 커맨드를 외우기 어려워서 평타만 치면서 찔끔찔끔 깎고 있었다고 하면 좋은 예시가 될지 모르겠습니다. 관성이라는 것은 사람의 발전을 해치고는 합니다. 설치 아무튼 이번에 맥북 m1 기본 터미널을 iterm2로 업그레이드 하면서 새로 공부한 내용을 정리해 보려고 합니다. 별 생각없이 다들 많이 쓴다고 하길래 터미널 앱은 iterm2로, 기본 shell은 zsh로 변경했는데 그게 이후로의 고난에 시작이 될 줄은 몰랐습니다. iterm2의 편리한 기능부터 확인하시고 설치를 고민하시기를 바랍니다. [1] 간단하게 정리해드리면 창을... </summary> </entry> <entry><title>자바 프로그램 개발을 위한 3대 핵심기술</title><link href="https://lee-jua.github.io/posts/%EC%9E%90%EB%B0%94_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8_%EA%B0%9C%EB%B0%9C%EC%9D%84_%EC%9C%84%ED%95%9C_3%EB%8C%80_%ED%95%B5%EC%8B%AC%EA%B8%B0%EC%88%A0/" rel="alternate" type="text/html" title="자바 프로그램 개발을 위한 3대 핵심기술" /><published>2022-10-21T01:30:00+09:00</published> <updated>2022-10-27T22:45:43+09:00</updated> <id>https://lee-jua.github.io/posts/%EC%9E%90%EB%B0%94_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8_%EA%B0%9C%EB%B0%9C%EC%9D%84_%EC%9C%84%ED%95%9C_3%EB%8C%80_%ED%95%B5%EC%8B%AC%EA%B8%B0%EC%88%A0/</id> <content src="https://lee-jua.github.io/posts/%EC%9E%90%EB%B0%94_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8_%EA%B0%9C%EB%B0%9C%EC%9D%84_%EC%9C%84%ED%95%9C_3%EB%8C%80_%ED%95%B5%EC%8B%AC%EA%B8%B0%EC%88%A0/" /> <author> <name>이주아</name> </author> <category term="프로그래밍 이론" /> <summary> JAVA 저희가 자바에 대해서 얘기할 때 그것은 프로그래밍 언어로서의 자바일 수도 있지만, 소프트웨어 플랫폼으로서의 자바일 수도 있습니다. 소프트웨어 플랫폼으로서의 자바란 자바(언어)로 기술된 프로그램 개발 및 실행을 할 수 있는 소프트웨어 모임의 총칭입니다. [1] 위의 그림은 오라클에서 제공하는 자바 플랫폼 구성요소 다이어그램입니다. 너무 복잡하니까 중요한 것만 집고 넘어가겠습니다. 다음의 세가지는 자바 플랫폼의 3대 구성요소입니다. JDK(Java Development Kit - 자바 개발 키트) JVM(Java Virture Machine - 자바 가상머신) JRE(Java Runtime Environment - 자바 런타임 환경) 이 세가지 기술은 서로 연결되어 동작하... </summary> </entry> <entry><title>CGI 프로그래밍 맛보기</title><link href="https://lee-jua.github.io/posts/CGI-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%A7%9B%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="CGI 프로그래밍 맛보기" /><published>2022-10-17T23:20:00+09:00</published> <updated>2022-10-18T22:45:08+09:00</updated> <id>https://lee-jua.github.io/posts/CGI-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%A7%9B%EB%B3%B4%EA%B8%B0/</id> <content src="https://lee-jua.github.io/posts/CGI-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%A7%9B%EB%B3%B4%EA%B8%B0/" /> <author> <name>이주아</name> </author> <category term="개발 실습" /> <summary> 잠시 쉬어가는 시간으로 지난번 스프링 포스팅에서 잠깐 나왔던 CGI 프로그래밍 구현과정을 포스팅하겠습니다. CGI(Common Gateway Interface)란 사용자에게 동적 웹페이지를 보여주기 위한 최초의 기술로, 웹 서버와 외부 프로그램 사이에서 정보를 주고받는 규약입니다. 리처시할때 97년도 자료까지 봤으니 저같은 신입 개발자분들에겐 다소 생소할 아주 오래된 기술입니다. CGI 동작과정 위의 그림을 보면 CGI의 동작과정에 대해 이해할 수 있습니다. 브라우저에서 보낸 요청을 웹서버가 CGI 인터페이스를 통해 CGI 프로그램에 전달 CGI 프로그램은 데이터베이스와 통신하여 동적인 페이지를 그려냅니다. 그려낸 페이지를 웹 서버를 통해 브라우저에 전달합니다. 그리고 다음의 서블... </summary> </entry> </feed>
